import 'package:flutter/material.dart';

import './buildSelection.dart';
import './catButton.dart';
import './homeButton.dart';
import './buildingDetailsStore.dart';

BuildingDetailsStore obj = BuildingDetailsStore();

//ensuring state updation and stuff
void main() {
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  @override
  State<MyApp> createState() => MyAppState();
}

class MyAppState extends State<MyApp> {
  //some temp stuff
  var displayText = 'Welcome to Seat Venumma!';
  //live page
  var _page = 'Seat Venumma';

  //refreshes the page everytime a button is Clicked
  void _buttonClicked(String setPage) {
    setState(() {
      _page = setPage;
    });
  }

  //determines which page is active - i.e which room, building or category page the user is on.
  //it then access the lists prepared in buildingDetailsStore and passes it to the button and layout generators.
  List pageLocator(var page) {
    List returnables = [];
    if (page == 'Seat Venumma') {
      returnables = [true, obj.buildings];
    } else if (page == 'Category Page') {
      returnables = [true, obj.categories];
    } else if (obj.inList(obj.categories, page)) {
      returnables = [true, obj.byCat[page]];
    } else if (obj.indexFinder(page) >= 0) {
      returnables = [
        true,
        (obj.details[obj.indexFinder(page)]['Rooms'] as Map).keys.toList()
      ];
    } else {
      returnables = [false, obj.roomDetailSearcher(page)];
    }

    return returnables;
  }

  //actual home page construction
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        //creates and appbar on top, with two buttons and the page heading
        appBar: AppBar(
          backgroundColor: Color.fromARGB(255, 4, 62, 68),
          actions: <Widget>[
            HomeButton(
              buttonClicked: _buttonClicked,
            ),
            CatButton(
              buttonClicked: _buttonClicked,
            ),
          ],
          title: Text(
            _page,
          ),
        ),
        //runs Build Selection for the body of the page - which generates the layout and necessary buttons.
        body: BuildSelection(
          //passing the function that has to be run in case a button generated by buildSelection is clicked.
          buttonClicked: _buttonClicked,
          //passing the appropriate list of buttons to be created - conditional generation here in case a room has been selected
          buildList: pageLocator(_page),
          page: _page,
        ),
      ),
    );
  }
}
